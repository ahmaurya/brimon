<?xml version="1.0" ?><interfacedef loc="44:/home/ahmaurya/Dropbox/Courses/CS691/brimon/tinyos-2.1.1/tos/chips/stm25p/Stm25pSector.nc" nicename="tos.chips.stm25p.Stm25pSector" qname="Stm25pSector">
      <documentation loc="1:/home/ahmaurya/Dropbox/Courses/CS691/brimon/tinyos-2.1.1/tos/chips/stm25p/Stm25p.h">
        <short>
 Copyright (c) 2005-2006 Arch Rock Corporation
 All rights reserved.</short>
        <long>
 Copyright (c) 2005-2006 Arch Rock Corporation
 All rights reserved.

 Redistribution and use in source and binary forms, with or without
 modification, are permitted provided that the following conditions
 are met:
 - Redistributions of source code must retain the above copyright
   notice, this list of conditions and the following disclaimer.
 - Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in the
   documentation and/or other materials provided with the
   distribution.
 - Neither the name of the Arch Rock Corporation nor the names of
   its contributors may be used to endorse or promote products derived
   from this software without specific prior written permission.

 THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
 FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE
 ARCHED ROCK OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
 OF THE POSSIBILITY OF SUCH DAMAGE

 @author Jonathan Hui &lt;jhui@archrock.com&gt;
 @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:12 $
</long>
      </documentation>
      <function command="" loc="51:/home/ahmaurya/Dropbox/Courses/CS691/brimon/tinyos-2.1.1/tos/chips/stm25p/Stm25pSector.nc" name="getPhysicalAddress" provided="0" ref="0x2b3677d28020">
        <documentation loc="46:/home/ahmaurya/Dropbox/Courses/CS691/brimon/tinyos-2.1.1/tos/chips/stm25p/Stm25pSector.nc">
          <short>
 Get the physical address of a volume address.</short>
          <long>
 Get the physical address of a volume address.

 @return The physical address corresponding to the volume address.
</long>
        </documentation>
        <interfacedef-ref nicename="tos.chips.stm25p.Stm25pSector" qname="Stm25pSector"/>
        <type-function alignment="I:1" size="I:1">
          <type-int alignment="I:2" cname="unsigned long" size="I:4" unsigned="">
            <typename><typedef-ref name="stm25p_addr_t" ref="0x2b3677cf7c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int alignment="I:2" cname="unsigned long" size="I:4" unsigned="">
              <typename><typedef-ref name="stm25p_addr_t" ref="0x2b3677cf7c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable loc="51:/home/ahmaurya/Dropbox/Courses/CS691/brimon/tinyos-2.1.1/tos/chips/stm25p/Stm25pSector.nc" name="addr" ref="0x2b3677d2ac58">
            <type-int alignment="I:2" cname="unsigned long" size="I:4" unsigned="">
              <typename><typedef-ref name="stm25p_addr_t" ref="0x2b3677cf7c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" loc="68:/home/ahmaurya/Dropbox/Courses/CS691/brimon/tinyos-2.1.1/tos/chips/stm25p/Stm25pSector.nc" name="read" provided="0" ref="0x2b3677d27940">
        <documentation loc="58:/home/ahmaurya/Dropbox/Courses/CS691/brimon/tinyos-2.1.1/tos/chips/stm25p/Stm25pSector.nc">
          <short>
 Read data from the flash chip.</short>
          <long>
 Read data from the flash chip. On SUCCESS, the
 &lt;code&gt;readDone&lt;/code&gt; event will be signalled when the operation
 is complete.

 @param addr within volume to read data from.
 @param buf pointer to read buffer.
 @param len number of bytes to read.
 @return SUCCESS if request was accepted, FAIL otherwise.
</long>
        </documentation>
        <interfacedef-ref nicename="tos.chips.stm25p.Stm25pSector" qname="Stm25pSector"/>
        <type-function alignment="I:1" size="I:1">
          <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
            <typename><typedef-ref name="error_t" ref="0x2b3676c015d8"/></typename>
          </type-int>
          <function-parameters>
            <type-int alignment="I:2" cname="unsigned long" size="I:4" unsigned="">
              <typename><typedef-ref name="stm25p_addr_t" ref="0x2b3677cf7c20"/></typename>
            </type-int>
            <type-pointer alignment="I:2" size="I:2">
              <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
                <typename><typedef-ref name="uint8_t" ref="0x2b3676396318"/></typename>
              </type-int>
            </type-pointer>
            <type-int alignment="I:2" cname="unsigned long" size="I:4" unsigned="">
              <typename><typedef-ref name="stm25p_len_t" ref="0x2b3677cf4908"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable loc="68:/home/ahmaurya/Dropbox/Courses/CS691/brimon/tinyos-2.1.1/tos/chips/stm25p/Stm25pSector.nc" name="addr" ref="0x2b3677d27020">
            <type-int alignment="I:2" cname="unsigned long" size="I:4" unsigned="">
              <typename><typedef-ref name="stm25p_addr_t" ref="0x2b3677cf7c20"/></typename>
            </type-int>
          </variable>
          <variable loc="68:/home/ahmaurya/Dropbox/Courses/CS691/brimon/tinyos-2.1.1/tos/chips/stm25p/Stm25pSector.nc" name="buf" ref="0x2b3677d27368">
            <type-pointer alignment="I:2" size="I:2">
              <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
                <typename><typedef-ref name="uint8_t" ref="0x2b3676396318"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable loc="68:/home/ahmaurya/Dropbox/Courses/CS691/brimon/tinyos-2.1.1/tos/chips/stm25p/Stm25pSector.nc" name="len" ref="0x2b3677d276b0">
            <type-int alignment="I:2" cname="unsigned long" size="I:4" unsigned="">
              <typename><typedef-ref name="stm25p_len_t" ref="0x2b3677cf4908"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" loc="101:/home/ahmaurya/Dropbox/Courses/CS691/brimon/tinyos-2.1.1/tos/chips/stm25p/Stm25pSector.nc" name="writeDone" provided="0" ref="0x2b3677d22608">
        <documentation loc="93:/home/ahmaurya/Dropbox/Courses/CS691/brimon/tinyos-2.1.1/tos/chips/stm25p/Stm25pSector.nc">
          <short>
 Signals when the write operation is complete.</short>
          <long>
 Signals when the write operation is complete.

 @param addr within the volume that data was written to.
 @param buf pointer to data buffer.
 @param len number of bytes written.
 @param error notification of how the operation went.
</long>
        </documentation>
        <interfacedef-ref nicename="tos.chips.stm25p.Stm25pSector" qname="Stm25pSector"/>
        <type-function alignment="I:1" size="I:1">
          <type-void alignment="I:1" size="I:1"/>
          <function-parameters>
            <type-int alignment="I:2" cname="unsigned long" size="I:4" unsigned="">
              <typename><typedef-ref name="stm25p_addr_t" ref="0x2b3677cf7c20"/></typename>
            </type-int>
            <type-pointer alignment="I:2" size="I:2">
              <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
                <typename><typedef-ref name="uint8_t" ref="0x2b3676396318"/></typename>
              </type-int>
            </type-pointer>
            <type-int alignment="I:2" cname="unsigned long" size="I:4" unsigned="">
              <typename><typedef-ref name="stm25p_len_t" ref="0x2b3677cf4908"/></typename>
            </type-int>
            <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
              <typename><typedef-ref name="error_t" ref="0x2b3676c015d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable loc="101:/home/ahmaurya/Dropbox/Courses/CS691/brimon/tinyos-2.1.1/tos/chips/stm25p/Stm25pSector.nc" name="addr" ref="0x2b3677d23830">
            <type-int alignment="I:2" cname="unsigned long" size="I:4" unsigned="">
              <typename><typedef-ref name="stm25p_addr_t" ref="0x2b3677cf7c20"/></typename>
            </type-int>
          </variable>
          <variable loc="101:/home/ahmaurya/Dropbox/Courses/CS691/brimon/tinyos-2.1.1/tos/chips/stm25p/Stm25pSector.nc" name="buf" ref="0x2b3677d23b78">
            <type-pointer alignment="I:2" size="I:2">
              <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
                <typename><typedef-ref name="uint8_t" ref="0x2b3676396318"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable loc="101:/home/ahmaurya/Dropbox/Courses/CS691/brimon/tinyos-2.1.1/tos/chips/stm25p/Stm25pSector.nc" name="len" ref="0x2b3677d22020">
            <type-int alignment="I:2" cname="unsigned long" size="I:4" unsigned="">
              <typename><typedef-ref name="stm25p_len_t" ref="0x2b3677cf4908"/></typename>
            </type-int>
          </variable>
          <variable loc="102:/home/ahmaurya/Dropbox/Courses/CS691/brimon/tinyos-2.1.1/tos/chips/stm25p/Stm25pSector.nc" name="error" ref="0x2b3677d22368">
            <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
              <typename><typedef-ref name="error_t" ref="0x2b3676c015d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" loc="112:/home/ahmaurya/Dropbox/Courses/CS691/brimon/tinyos-2.1.1/tos/chips/stm25p/Stm25pSector.nc" name="erase" provided="0" ref="0x2b3677d213f8">
        <documentation loc="104:/home/ahmaurya/Dropbox/Courses/CS691/brimon/tinyos-2.1.1/tos/chips/stm25p/Stm25pSector.nc">
          <short>
 Erase a number of sectors.</short>
          <long>
 Erase a number of sectors. On SUCCESS, the &lt;code&gt;eraseDone&lt;/code&gt;
 event will be signalled when the operation completes.

 @param sector within volume to begin erasing.
 @param num_sectors number of sectors to erase.
 @return SUCCESS if request was accepted, FAIL otherwise.
</long>
        </documentation>
        <interfacedef-ref nicename="tos.chips.stm25p.Stm25pSector" qname="Stm25pSector"/>
        <type-function alignment="I:1" size="I:1">
          <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
            <typename><typedef-ref name="error_t" ref="0x2b3676c015d8"/></typename>
          </type-int>
          <function-parameters>
            <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
              <typename><typedef-ref name="uint8_t" ref="0x2b3676396318"/></typename>
            </type-int>
            <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
              <typename><typedef-ref name="uint8_t" ref="0x2b3676396318"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable loc="112:/home/ahmaurya/Dropbox/Courses/CS691/brimon/tinyos-2.1.1/tos/chips/stm25p/Stm25pSector.nc" name="sector" ref="0x2b3677d22dd0">
            <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
              <typename><typedef-ref name="uint8_t" ref="0x2b3676396318"/></typename>
            </type-int>
          </variable>
          <variable loc="112:/home/ahmaurya/Dropbox/Courses/CS691/brimon/tinyos-2.1.1/tos/chips/stm25p/Stm25pSector.nc" name="num_sectors" ref="0x2b3677d21178">
            <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
              <typename><typedef-ref name="uint8_t" ref="0x2b3676396318"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" loc="121:/home/ahmaurya/Dropbox/Courses/CS691/brimon/tinyos-2.1.1/tos/chips/stm25p/Stm25pSector.nc" name="eraseDone" provided="0" ref="0x2b3677d205d8">
        <documentation loc="114:/home/ahmaurya/Dropbox/Courses/CS691/brimon/tinyos-2.1.1/tos/chips/stm25p/Stm25pSector.nc">
          <short>
 Signals when the erase operation is complete.</short>
          <long>
 Signals when the erase operation is complete.

 @param sector within volume that erasing begain.
 @param num_sectors number of sectors erased.
 @param error notification of how the operation went.
</long>
        </documentation>
        <interfacedef-ref nicename="tos.chips.stm25p.Stm25pSector" qname="Stm25pSector"/>
        <type-function alignment="I:1" size="I:1">
          <type-void alignment="I:1" size="I:1"/>
          <function-parameters>
            <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
              <typename><typedef-ref name="uint8_t" ref="0x2b3676396318"/></typename>
            </type-int>
            <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
              <typename><typedef-ref name="uint8_t" ref="0x2b3676396318"/></typename>
            </type-int>
            <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
              <typename><typedef-ref name="error_t" ref="0x2b3676c015d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable loc="121:/home/ahmaurya/Dropbox/Courses/CS691/brimon/tinyos-2.1.1/tos/chips/stm25p/Stm25pSector.nc" name="sector" ref="0x2b3677d21bb8">
            <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
              <typename><typedef-ref name="uint8_t" ref="0x2b3676396318"/></typename>
            </type-int>
          </variable>
          <variable loc="121:/home/ahmaurya/Dropbox/Courses/CS691/brimon/tinyos-2.1.1/tos/chips/stm25p/Stm25pSector.nc" name="num_sectors" ref="0x2b3677d20020">
            <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
              <typename><typedef-ref name="uint8_t" ref="0x2b3676396318"/></typename>
            </type-int>
          </variable>
          <variable loc="121:/home/ahmaurya/Dropbox/Courses/CS691/brimon/tinyos-2.1.1/tos/chips/stm25p/Stm25pSector.nc" name="error" ref="0x2b3677d20348">
            <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
              <typename><typedef-ref name="error_t" ref="0x2b3676c015d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" loc="144:/home/ahmaurya/Dropbox/Courses/CS691/brimon/tinyos-2.1.1/tos/chips/stm25p/Stm25pSector.nc" name="computeCrcDone" provided="0" ref="0x2b3677d1dc70">
        <documentation loc="136:/home/ahmaurya/Dropbox/Courses/CS691/brimon/tinyos-2.1.1/tos/chips/stm25p/Stm25pSector.nc">
          <short>
 Signals when the crc computation is complete.</short>
          <long>
 Signals when the crc computation is complete.

 @param addr within the volume that the crc computation began at.
 @param len number of bytes that the crc was computed over.
 @param crc the resulting crc value
 @param error notification of how the operation went.
</long>
        </documentation>
        <interfacedef-ref nicename="tos.chips.stm25p.Stm25pSector" qname="Stm25pSector"/>
        <type-function alignment="I:1" size="I:1">
          <type-void alignment="I:1" size="I:1"/>
          <function-parameters>
            <type-int alignment="I:2" cname="unsigned long" size="I:4" unsigned="">
              <typename><typedef-ref name="stm25p_addr_t" ref="0x2b3677cf7c20"/></typename>
            </type-int>
            <type-int alignment="I:2" cname="unsigned long" size="I:4" unsigned="">
              <typename><typedef-ref name="stm25p_len_t" ref="0x2b3677cf4908"/></typename>
            </type-int>
            <type-int alignment="I:2" cname="unsigned int" size="I:2" unsigned="">
              <typename><typedef-ref name="uint16_t" ref="0x2b36763969f0"/></typename>
            </type-int>
            <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
              <typename><typedef-ref name="error_t" ref="0x2b3676c015d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable loc="144:/home/ahmaurya/Dropbox/Courses/CS691/brimon/tinyos-2.1.1/tos/chips/stm25p/Stm25pSector.nc" name="addr" ref="0x2b3677d1d020">
            <type-int alignment="I:2" cname="unsigned long" size="I:4" unsigned="">
              <typename><typedef-ref name="stm25p_addr_t" ref="0x2b3677cf7c20"/></typename>
            </type-int>
          </variable>
          <variable loc="144:/home/ahmaurya/Dropbox/Courses/CS691/brimon/tinyos-2.1.1/tos/chips/stm25p/Stm25pSector.nc" name="len" ref="0x2b3677d1d368">
            <type-int alignment="I:2" cname="unsigned long" size="I:4" unsigned="">
              <typename><typedef-ref name="stm25p_len_t" ref="0x2b3677cf4908"/></typename>
            </type-int>
          </variable>
          <variable loc="145:/home/ahmaurya/Dropbox/Courses/CS691/brimon/tinyos-2.1.1/tos/chips/stm25p/Stm25pSector.nc" name="crc" ref="0x2b3677d1d6a8">
            <type-int alignment="I:2" cname="unsigned int" size="I:2" unsigned="">
              <typename><typedef-ref name="uint16_t" ref="0x2b36763969f0"/></typename>
            </type-int>
          </variable>
          <variable loc="145:/home/ahmaurya/Dropbox/Courses/CS691/brimon/tinyos-2.1.1/tos/chips/stm25p/Stm25pSector.nc" name="error" ref="0x2b3677d1d9d0">
            <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
              <typename><typedef-ref name="error_t" ref="0x2b3676c015d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" loc="133:/home/ahmaurya/Dropbox/Courses/CS691/brimon/tinyos-2.1.1/tos/chips/stm25p/Stm25pSector.nc" name="computeCrc" provided="0" ref="0x2b3677d1e730">
        <documentation loc="123:/home/ahmaurya/Dropbox/Courses/CS691/brimon/tinyos-2.1.1/tos/chips/stm25p/Stm25pSector.nc">
          <short>
 Compute CRC for some contiguous data.</short>
          <long>
 Compute CRC for some contiguous data. On SUCCESS, the
 &lt;code&gt;computeCrcDone&lt;/code&gt; event will be signalled when the
 operation completes.

 @param crc the crc value to start with.
 @param addr within the volume to begin crc computation.
 @param len number of bytes to compute crc over.
 @return SUCCESS if the request was accepted, FAIL otherwise.
</long>
        </documentation>
        <interfacedef-ref nicename="tos.chips.stm25p.Stm25pSector" qname="Stm25pSector"/>
        <type-function alignment="I:1" size="I:1">
          <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
            <typename><typedef-ref name="error_t" ref="0x2b3676c015d8"/></typename>
          </type-int>
          <function-parameters>
            <type-int alignment="I:2" cname="unsigned int" size="I:2" unsigned="">
              <typename><typedef-ref name="uint16_t" ref="0x2b36763969f0"/></typename>
            </type-int>
            <type-int alignment="I:2" cname="unsigned long" size="I:4" unsigned="">
              <typename><typedef-ref name="stm25p_addr_t" ref="0x2b3677cf7c20"/></typename>
            </type-int>
            <type-int alignment="I:2" cname="unsigned long" size="I:4" unsigned="">
              <typename><typedef-ref name="stm25p_len_t" ref="0x2b3677cf4908"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable loc="133:/home/ahmaurya/Dropbox/Courses/CS691/brimon/tinyos-2.1.1/tos/chips/stm25p/Stm25pSector.nc" name="crc" ref="0x2b3677d20d98">
            <type-int alignment="I:2" cname="unsigned int" size="I:2" unsigned="">
              <typename><typedef-ref name="uint16_t" ref="0x2b36763969f0"/></typename>
            </type-int>
          </variable>
          <variable loc="133:/home/ahmaurya/Dropbox/Courses/CS691/brimon/tinyos-2.1.1/tos/chips/stm25p/Stm25pSector.nc" name="addr" ref="0x2b3677d1e138">
            <type-int alignment="I:2" cname="unsigned long" size="I:4" unsigned="">
              <typename><typedef-ref name="stm25p_addr_t" ref="0x2b3677cf7c20"/></typename>
            </type-int>
          </variable>
          <variable loc="134:/home/ahmaurya/Dropbox/Courses/CS691/brimon/tinyos-2.1.1/tos/chips/stm25p/Stm25pSector.nc" name="len" ref="0x2b3677d1e4a0">
            <type-int alignment="I:2" cname="unsigned long" size="I:4" unsigned="">
              <typename><typedef-ref name="stm25p_len_t" ref="0x2b3677cf4908"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" loc="91:/home/ahmaurya/Dropbox/Courses/CS691/brimon/tinyos-2.1.1/tos/chips/stm25p/Stm25pSector.nc" name="write" provided="0" ref="0x2b3677d23020">
        <documentation loc="81:/home/ahmaurya/Dropbox/Courses/CS691/brimon/tinyos-2.1.1/tos/chips/stm25p/Stm25pSector.nc">
          <short>
 Write data to the flash chip.</short>
          <long>
 Write data to the flash chip. On SUCCESS, the
 &lt;code&gt;writeDone&lt;/code&gt; event will be signalled when the operation
 is complete.

 @param addr within volume to write data to.
 @param buf pointer to data buffer.
 @param len number of bytes to write.
 @return SUCCESS if request was accepted, FAIL otherwise.
</long>
        </documentation>
        <interfacedef-ref nicename="tos.chips.stm25p.Stm25pSector" qname="Stm25pSector"/>
        <type-function alignment="I:1" size="I:1">
          <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
            <typename><typedef-ref name="error_t" ref="0x2b3676c015d8"/></typename>
          </type-int>
          <function-parameters>
            <type-int alignment="I:2" cname="unsigned long" size="I:4" unsigned="">
              <typename><typedef-ref name="stm25p_addr_t" ref="0x2b3677cf7c20"/></typename>
            </type-int>
            <type-pointer alignment="I:2" size="I:2">
              <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
                <typename><typedef-ref name="uint8_t" ref="0x2b3676396318"/></typename>
              </type-int>
            </type-pointer>
            <type-int alignment="I:2" cname="unsigned long" size="I:4" unsigned="">
              <typename><typedef-ref name="stm25p_len_t" ref="0x2b3677cf4908"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable loc="91:/home/ahmaurya/Dropbox/Courses/CS691/brimon/tinyos-2.1.1/tos/chips/stm25p/Stm25pSector.nc" name="addr" ref="0x2b3677d25668">
            <type-int alignment="I:2" cname="unsigned long" size="I:4" unsigned="">
              <typename><typedef-ref name="stm25p_addr_t" ref="0x2b3677cf7c20"/></typename>
            </type-int>
          </variable>
          <variable loc="91:/home/ahmaurya/Dropbox/Courses/CS691/brimon/tinyos-2.1.1/tos/chips/stm25p/Stm25pSector.nc" name="buf" ref="0x2b3677d259b0">
            <type-pointer alignment="I:2" size="I:2">
              <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
                <typename><typedef-ref name="uint8_t" ref="0x2b3676396318"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable loc="91:/home/ahmaurya/Dropbox/Courses/CS691/brimon/tinyos-2.1.1/tos/chips/stm25p/Stm25pSector.nc" name="len" ref="0x2b3677d25cf8">
            <type-int alignment="I:2" cname="unsigned long" size="I:4" unsigned="">
              <typename><typedef-ref name="stm25p_len_t" ref="0x2b3677cf4908"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" loc="56:/home/ahmaurya/Dropbox/Courses/CS691/brimon/tinyos-2.1.1/tos/chips/stm25p/Stm25pSector.nc" name="getNumSectors" provided="0" ref="0x2b3677d287d0">
        <documentation loc="53:/home/ahmaurya/Dropbox/Courses/CS691/brimon/tinyos-2.1.1/tos/chips/stm25p/Stm25pSector.nc">
          <short>
 Get the number of sectors in the volume.</short>
          <long>
 Get the number of sectors in the volume.
</long>
        </documentation>
        <interfacedef-ref nicename="tos.chips.stm25p.Stm25pSector" qname="Stm25pSector"/>
        <type-function alignment="I:1" size="I:1">
          <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
            <typename><typedef-ref name="uint8_t" ref="0x2b3676396318"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" loc="78:/home/ahmaurya/Dropbox/Courses/CS691/brimon/tinyos-2.1.1/tos/chips/stm25p/Stm25pSector.nc" name="readDone" provided="0" ref="0x2b3677d26de8">
        <documentation loc="70:/home/ahmaurya/Dropbox/Courses/CS691/brimon/tinyos-2.1.1/tos/chips/stm25p/Stm25pSector.nc">
          <short>
 Signals when the read operation is complete.</short>
          <long>
 Signals when the read operation is complete.

 @param addr within the volume that data was read from.
 @param buf pointer to buffer that data was placed.
 @param len number of bytes read.
 @param error notification of how the operation went.
</long>
        </documentation>
        <interfacedef-ref nicename="tos.chips.stm25p.Stm25pSector" qname="Stm25pSector"/>
        <type-function alignment="I:1" size="I:1">
          <type-void alignment="I:1" size="I:1"/>
          <function-parameters>
            <type-int alignment="I:2" cname="unsigned long" size="I:4" unsigned="">
              <typename><typedef-ref name="stm25p_addr_t" ref="0x2b3677cf7c20"/></typename>
            </type-int>
            <type-pointer alignment="I:2" size="I:2">
              <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
                <typename><typedef-ref name="uint8_t" ref="0x2b3676396318"/></typename>
              </type-int>
            </type-pointer>
            <type-int alignment="I:2" cname="unsigned long" size="I:4" unsigned="">
              <typename><typedef-ref name="stm25p_len_t" ref="0x2b3677cf4908"/></typename>
            </type-int>
            <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
              <typename><typedef-ref name="error_t" ref="0x2b3676c015d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable loc="78:/home/ahmaurya/Dropbox/Courses/CS691/brimon/tinyos-2.1.1/tos/chips/stm25p/Stm25pSector.nc" name="addr" ref="0x2b3677d26170">
            <type-int alignment="I:2" cname="unsigned long" size="I:4" unsigned="">
              <typename><typedef-ref name="stm25p_addr_t" ref="0x2b3677cf7c20"/></typename>
            </type-int>
          </variable>
          <variable loc="78:/home/ahmaurya/Dropbox/Courses/CS691/brimon/tinyos-2.1.1/tos/chips/stm25p/Stm25pSector.nc" name="buf" ref="0x2b3677d264b8">
            <type-pointer alignment="I:2" size="I:2">
              <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
                <typename><typedef-ref name="uint8_t" ref="0x2b3676396318"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable loc="78:/home/ahmaurya/Dropbox/Courses/CS691/brimon/tinyos-2.1.1/tos/chips/stm25p/Stm25pSector.nc" name="len" ref="0x2b3677d26800">
            <type-int alignment="I:2" cname="unsigned long" size="I:4" unsigned="">
              <typename><typedef-ref name="stm25p_len_t" ref="0x2b3677cf4908"/></typename>
            </type-int>
          </variable>
          <variable loc="79:/home/ahmaurya/Dropbox/Courses/CS691/brimon/tinyos-2.1.1/tos/chips/stm25p/Stm25pSector.nc" name="error" ref="0x2b3677d26b48">
            <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
              <typename><typedef-ref name="error_t" ref="0x2b3676c015d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
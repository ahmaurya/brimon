<?xml version="1.0" ?><component loc="35:/home/ahmaurya/Dropbox/Courses/CS691/brimon/tinyos-2.1.1/tos/system/TinySchedulerC.nc" nicename="tos.system.TinySchedulerC" qname="TinySchedulerC">
      <documentation loc="23:/home/ahmaurya/Dropbox/Courses/CS691/brimon/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
        <short>
 The TinyOS scheduler.</short>
        <long>
 The TinyOS scheduler. It provides two interfaces: Scheduler,
 for TinyOS to initialize and run tasks, and TaskBasic, the simplext
 class of TinyOS tasks (reserved always at-most-once posting,
 FIFO, parameter-free). For details and information on how to
 replace the scheduler, refer to TEP 106.

 @author  Phil Levis
 @date    August 7 2005
 @see     TEP 106: Tasks and Schedulers
</long>
      </documentation>
      <configuration/>
      <wiring>
        <wire loc="43:/home/ahmaurya/Dropbox/Courses/CS691/brimon/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
          <from><interface-ref name="TaskBasic" ref="0x2ae8dd506b18" scoped=""/></from>
          <to><interface-ref name="TaskBasic" ref="0x2ae8dd968020" scoped=""/></to>
        </wire>
        <wire loc="42:/home/ahmaurya/Dropbox/Courses/CS691/brimon/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
          <from><interface-ref name="Scheduler" ref="0x2ae8dd4fa0f0" scoped=""/></from>
          <to><interface-ref name="Scheduler" ref="0x2ae8dd9690c0" scoped=""/></to>
        </wire>
        <wire loc="44:/home/ahmaurya/Dropbox/Courses/CS691/brimon/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
          <from><interface-ref name="McuSleep" ref="0x2ae8dd9644e0" scoped=""/></from>
          <to><interface-ref name="McuSleep" ref="0x2ae8dd56b408" scoped=""/></to>
        </wire>
      </wiring>
    <specification><interface loc="37:/home/ahmaurya/Dropbox/Courses/CS691/brimon/tinyos-2.1.1/tos/system/TinySchedulerC.nc" name="TaskBasic" provided="1" ref="0x2ae8dd506b18">
      <component-ref nicename="tos.system.TinySchedulerC" qname="TinySchedulerC"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="TaskBasic" ref="0x2ae8dd506b18" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.interfaces.TaskBasic" qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
          <typename><typedef-ref name="uint8_t" ref="0x2ae8dcc94318"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" ref="0x2ae8dd506e68" scoped=""/>
        <function-ref name="runTask" ref="0x2ae8dd4d8020" scoped=""/>
      </interface-functions>
    </interface><interface loc="36:/home/ahmaurya/Dropbox/Courses/CS691/brimon/tinyos-2.1.1/tos/system/TinySchedulerC.nc" name="Scheduler" provided="1" ref="0x2ae8dd4fa0f0">
      <component-ref nicename="tos.system.TinySchedulerC" qname="TinySchedulerC"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="Scheduler" ref="0x2ae8dd4fa0f0" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.interfaces.Scheduler" qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" ref="0x2ae8dd4fa440" scoped=""/>
        <function-ref name="taskLoop" ref="0x2ae8dd4fa5c8" scoped=""/>
        <function-ref name="runNextTask" ref="0x2ae8dd4fa750" scoped=""/>
      </interface-functions>
    </interface></specification><referenced><interface loc="46:/home/ahmaurya/Dropbox/Courses/CS691/brimon/tinyos-2.1.1/tos/system/SchedulerBasicP.nc" name="McuSleep" provided="0" ref="0x2ae8dd9644e0">
      <component-ref nicename="tos.system.SchedulerBasicP" qname="SchedulerBasicP"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="McuSleep" ref="0x2ae8dd9644e0" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.interfaces.McuSleep" qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" ref="0x2ae8dd964830" scoped=""/>
      </interface-functions>
    </interface><interface loc="45:/home/ahmaurya/Dropbox/Courses/CS691/brimon/tinyos-2.1.1/tos/system/SchedulerBasicP.nc" name="TaskBasic" provided="1" ref="0x2ae8dd968020">
      <component-ref nicename="tos.system.SchedulerBasicP" qname="SchedulerBasicP"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="TaskBasic" ref="0x2ae8dd968020" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.interfaces.TaskBasic" qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
          <typename><typedef-ref name="uint8_t" ref="0x2ae8dcc94318"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" ref="0x2ae8dd968370" scoped=""/>
        <function-ref name="runTask" ref="0x2ae8dd9684f8" scoped=""/>
      </interface-functions>
    </interface><interface loc="43:/home/ahmaurya/Dropbox/Courses/CS691/brimon/tinyos-2.1.1/tos/chips/msp430/McuSleepC.nc" name="McuSleep" provided="1" ref="0x2ae8dd56b408">
      <component-ref nicename="tos.chips.msp430.McuSleepC" qname="McuSleepC"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="McuSleep" ref="0x2ae8dd56b408" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.interfaces.McuSleep" qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" ref="0x2ae8dd56b758" scoped=""/>
      </interface-functions>
    </interface><interface loc="44:/home/ahmaurya/Dropbox/Courses/CS691/brimon/tinyos-2.1.1/tos/system/SchedulerBasicP.nc" name="Scheduler" provided="1" ref="0x2ae8dd9690c0">
      <component-ref nicename="tos.system.SchedulerBasicP" qname="SchedulerBasicP"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="Scheduler" ref="0x2ae8dd9690c0" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.interfaces.Scheduler" qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" ref="0x2ae8dd969410" scoped=""/>
        <function-ref name="taskLoop" ref="0x2ae8dd969598" scoped=""/>
        <function-ref name="runNextTask" ref="0x2ae8dd969720" scoped=""/>
      </interface-functions>
    </interface><component loc="43:/home/ahmaurya/Dropbox/Courses/CS691/brimon/tinyos-2.1.1/tos/system/SchedulerBasicP.nc" nicename="tos.system.SchedulerBasicP" qname="SchedulerBasicP" safe="">
      <module/>
    </component><component loc="41:/home/ahmaurya/Dropbox/Courses/CS691/brimon/tinyos-2.1.1/tos/chips/msp430/McuSleepC.nc" nicename="tos.chips.msp430.McuSleepC" qname="McuSleepC" safe="">
      <documentation loc="25:/home/ahmaurya/Dropbox/Courses/CS691/brimon/tinyos-2.1.1/tos/chips/msp430/McuSleepC.nc">
        <short>
 Implementation of TEP 112 (Microcontroller Power Management) for
 the MSP430.</short>
        <long>
 Implementation of TEP 112 (Microcontroller Power Management) for
 the MSP430. Code for low power calculation copied from older
 msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.


 @author Philip Levis
 @author Vlado Handziski
 @author Joe Polastre
 @author Cory Sharp
 @date   October 26, 2005
 @see  Please refer to TEP 112 for more information about this component and its
          intended use.

</long>
      </documentation>
      <module/>
    </component></referenced></component>